//user prompt for name giving -> inside addStudent.
//addStudent() -> use of createStudent (with parameters ADDED).
//free(student) inside addStudent.
//numStudent inside createStudent OR in new function.
//numStudents: to be equal with the last id read from file.
//id inside createStudent, as argument. pass numStudents at the call.
//createNode + insert: inside addStudent
//If EOF: blank line -> OK, 
    if EOF: and the end of student line -> saves data [NOT put in the list!!].
//SOLUTION: Αρχεία τυχαίας προσπέλασης (HUA eclass).
//FIX DEFAULT_NAME 
//Διαγραφή από την ουρά: εκνέου ανάθεση το ID του διαγραμμένου [??]
//Prompts inside functions!

//[OK + a\out-HUA] FIX cmd args (filename CHECKS etc).
//[OK] REPLACE create / put args / not malloc?? : -> use Student newSt + a pointer to it (+ at main) [*].
//[OK] [*](free(student) AFTER addStudent.)

// load and save: ADD CHECKS. -> empty list [+FUNCTION]
//[OK] PROBLEM: read OK BUT wrong info [fread].
// GROUP strcpy / free (update / delete) -> node upd_node_p / del_node_p. 

//[~OK] strlen CHECK (>= 2  kai  <= MAXSTRING) at userPrompt - addSt().    [+FUNCTION]

//[**CHECK] REPLACE ALL: [MAXSTRING] -> [MAXSTRING + 1]    
//[OK] Show empty list msg -> when choice is 2-5.

// [ΟΚ] delete, update: first give info, then question if you want to delete/update.
// [OK] FIX: student with id=0 -> not exist [findStudent].
    --> COMMENT: for the CHECKS at addSt() and load().



--> add, delete, update RETURN TYPE [int]: (~ checkDelete) CHANGE -> τιμή(-1)/μεταβλητή που επιστρ [HUA eclass].

--> CLEAN test checks.
--> [TEST + a\out-HUA]
--> COMMENTS.




CONNECT return load NULL -> save: file created.

CHANGE only node condition.

EOF, NULL and EMPTY checks | add \n.

put id: EOF -> back to menu.

use rb, wb ??

//createStudent [not malloc(var at the begin of main)].

if def - no def, pragma once [HUA eclass].




**
Μπορείτε να χρησιμοποιήσετε κώδικα που βρήκατε στο internet ή βιβλία με τις εξής προϋποθέσεις (μη τήρηση των προϋποθέσεων σημαίνει κακόβουλη συμπεριφορά και θα αξιολογείται σαν αντιγραφή):
    Να αναφέρετε ποιο κομμάτι και από πού το πήρατε
    Να καταλαβαίνετε τι είναι αυτό που χρησιμοποιείτε και να είστε προετοιμασμένοι να το εξηγήσετε όταν σας ζητηθεί
Προσοχή στο μέγεθος των αρχείων που υποβάλλετε. Στις περισσότερες περιπτώσεις το ωφέλιμο κομμάτι της εργασίας δεν είναι λογικό να είναι μεγαλύτερο από 200-300KBs.
    Η εξέταση της εργασίας γίνεται επάνω στην υποβληθείσα (ή υπό υποβολή σε περιπτώσεις εκπρόθεσμης υποβολής) εργασία, επομένως στην έναρξη της εξέτασης θα πρέπει να την έχετε διαθέσιμη και να είναι πλήρως λειτουργική.
**
